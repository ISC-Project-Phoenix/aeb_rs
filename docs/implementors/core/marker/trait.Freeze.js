(function() {var implementors = {};
implementors["aeb_rs"] = [{"text":"impl&lt;const GRID_N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"aeb_rs/struct.Aeb.html\" title=\"struct aeb_rs::Aeb\">Aeb</a>&lt;GRID_N&gt;","synthetic":true,"types":["aeb_rs::aeb::Aeb"]},{"text":"impl&lt;const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"aeb_rs/grid/struct.Grid.html\" title=\"struct aeb_rs::grid::Grid\">Grid</a>&lt;N&gt;","synthetic":true,"types":["aeb_rs::grid::Grid"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aeb_rs/grid/enum.Cell.html\" title=\"enum aeb_rs::grid::Cell\">Cell</a>","synthetic":true,"types":["aeb_rs::grid::Cell"]},{"text":"impl Freeze for <a class=\"enum\" href=\"aeb_rs/grid/enum.GridErr.html\" title=\"enum aeb_rs::grid::GridErr\">GridErr</a>","synthetic":true,"types":["aeb_rs::grid::GridErr"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aeb_rs/grid/struct.GridSize.html\" title=\"struct aeb_rs::grid::GridSize\">GridSize</a>","synthetic":true,"types":["aeb_rs::grid::GridSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aeb_rs/grid/struct.KartPoint.html\" title=\"struct aeb_rs::grid::KartPoint\">KartPoint</a>","synthetic":true,"types":["aeb_rs::grid::KartPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aeb_rs/grid/struct.GridPoint.html\" title=\"struct aeb_rs::grid::GridPoint\">GridPoint</a>","synthetic":true,"types":["aeb_rs::grid::GridPoint"]},{"text":"impl Freeze for <a class=\"struct\" href=\"aeb_rs/grid/struct.GridPointf.html\" title=\"struct aeb_rs::grid::GridPointf\">GridPointf</a>","synthetic":true,"types":["aeb_rs::grid::GridPointf"]}];
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["hash32"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"hash32/struct.FnvHasher.html\" title=\"struct hash32::FnvHasher\">Hasher</a>","synthetic":true,"types":["hash32::fnv::Hasher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hash32/struct.Murmur3Hasher.html\" title=\"struct hash32::Murmur3Hasher\">Hasher</a>","synthetic":true,"types":["hash32::murmur3::Hasher"]},{"text":"impl&lt;H&gt; Freeze for <a class=\"struct\" href=\"hash32/struct.BuildHasherDefault.html\" title=\"struct hash32::BuildHasherDefault\">BuildHasherDefault</a>&lt;H&gt;","synthetic":true,"types":["hash32::BuildHasherDefault"]}];
implementors["heapless"] = [{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.Deque.html\" title=\"struct heapless::Deque\">Deque</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::deque::Deque"]},{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.HistoryBuffer.html\" title=\"struct heapless::HistoryBuffer\">HistoryBuffer</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::histbuf::HistoryBuffer"]},{"text":"impl&lt;'a, T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.OldestOrdered.html\" title=\"struct heapless::OldestOrdered\">OldestOrdered</a>&lt;'a, T, N&gt;","synthetic":true,"types":["heapless::histbuf::OldestOrdered"]},{"text":"impl&lt;'a, K, V, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"enum\" href=\"heapless/enum.Entry.html\" title=\"enum heapless::Entry\">Entry</a>&lt;'a, K, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::indexmap::Entry"]},{"text":"impl&lt;'a, K, V, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.OccupiedEntry.html\" title=\"struct heapless::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::indexmap::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.VacantEntry.html\" title=\"struct heapless::VacantEntry\">VacantEntry</a>&lt;'a, K, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::indexmap::VacantEntry"]},{"text":"impl&lt;K, V, S, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.IndexMap.html\" title=\"struct heapless::IndexMap\">IndexMap</a>&lt;K, V, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::indexmap::IndexMap"]},{"text":"impl&lt;T, S, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.IndexSet.html\" title=\"struct heapless::IndexSet\">IndexSet</a>&lt;T, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::indexset::IndexSet"]},{"text":"impl&lt;K, V, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.LinearMap.html\" title=\"struct heapless::LinearMap\">LinearMap</a>&lt;K, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::linear_map::LinearMap"]},{"text":"impl&lt;const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.String.html\" title=\"struct heapless::String\">String</a>&lt;N&gt;","synthetic":true,"types":["heapless::string::String"]},{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/struct.Vec.html\" title=\"struct heapless::Vec\">Vec</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::vec::Vec"]},{"text":"impl Freeze for <a class=\"enum\" href=\"heapless/binary_heap/enum.Min.html\" title=\"enum heapless::binary_heap::Min\">Min</a>","synthetic":true,"types":["heapless::binary_heap::Min"]},{"text":"impl Freeze for <a class=\"enum\" href=\"heapless/binary_heap/enum.Max.html\" title=\"enum heapless::binary_heap::Max\">Max</a>","synthetic":true,"types":["heapless::binary_heap::Max"]},{"text":"impl&lt;T, K, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/binary_heap/struct.BinaryHeap.html\" title=\"struct heapless::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T, K, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::binary_heap::BinaryHeap"]},{"text":"impl&lt;'a, T, K, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/binary_heap/struct.PeekMut.html\" title=\"struct heapless::binary_heap::PeekMut\">PeekMut</a>&lt;'a, T, K, N&gt;","synthetic":true,"types":["heapless::binary_heap::PeekMut"]},{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; !Freeze for <a class=\"struct\" href=\"heapless/mpmc/struct.MpMcQueue.html\" title=\"struct heapless::mpmc::MpMcQueue\">MpMcQueue</a>&lt;T, N&gt;","synthetic":true,"types":["heapless::mpmc::MpMcQueue"]},{"text":"impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"heapless/pool/singleton/arc/struct.Arc.html\" title=\"struct heapless::pool::singleton::arc::Arc\">Arc</a>&lt;P&gt;","synthetic":true,"types":["heapless::pool::singleton::arc::Arc"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"heapless/pool/singleton/arc/struct.ArcInner.html\" title=\"struct heapless::pool::singleton::arc::ArcInner\">ArcInner</a>&lt;T&gt;","synthetic":true,"types":["heapless::pool::singleton::arc::ArcInner"]},{"text":"impl&lt;POOL, STATE&gt; Freeze for <a class=\"struct\" href=\"heapless/pool/singleton/struct.Box.html\" title=\"struct heapless::pool::singleton::Box\">Box</a>&lt;POOL, STATE&gt;","synthetic":true,"types":["heapless::pool::singleton::Box"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"heapless/pool/struct.Node.html\" title=\"struct heapless::pool::Node\">Node</a>&lt;T&gt;","synthetic":true,"types":["heapless::pool::stack::Node"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"heapless/pool/struct.Pool.html\" title=\"struct heapless::pool::Pool\">Pool</a>&lt;T&gt;","synthetic":true,"types":["heapless::pool::Pool"]},{"text":"impl&lt;T, STATE&gt; Freeze for <a class=\"struct\" href=\"heapless/pool/struct.Box.html\" title=\"struct heapless::pool::Box\">Box</a>&lt;T, STATE&gt;","synthetic":true,"types":["heapless::pool::Box"]},{"text":"impl Freeze for <a class=\"enum\" href=\"heapless/pool/enum.Uninit.html\" title=\"enum heapless::pool::Uninit\">Uninit</a>","synthetic":true,"types":["heapless::pool::Uninit"]},{"text":"impl Freeze for <a class=\"enum\" href=\"heapless/pool/enum.Init.html\" title=\"enum heapless::pool::Init\">Init</a>","synthetic":true,"types":["heapless::pool::Init"]},{"text":"impl Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Min.html\" title=\"struct heapless::sorted_linked_list::Min\">Min</a>","synthetic":true,"types":["heapless::sorted_linked_list::Min"]},{"text":"impl Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Max.html\" title=\"struct heapless::sorted_linked_list::Max\">Max</a>","synthetic":true,"types":["heapless::sorted_linked_list::Max"]},{"text":"impl&lt;T, Idx&gt; Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Node.html\" title=\"struct heapless::sorted_linked_list::Node\">Node</a>&lt;T, Idx&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Idx: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::sorted_linked_list::Node"]},{"text":"impl&lt;T, Idx, K, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.SortedLinkedList.html\" title=\"struct heapless::sorted_linked_list::SortedLinkedList\">SortedLinkedList</a>&lt;T, Idx, K, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Idx: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::sorted_linked_list::SortedLinkedList"]},{"text":"impl Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.LinkedIndexU8.html\" title=\"struct heapless::sorted_linked_list::LinkedIndexU8\">LinkedIndexU8</a>","synthetic":true,"types":["heapless::sorted_linked_list::LinkedIndexU8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.LinkedIndexU16.html\" title=\"struct heapless::sorted_linked_list::LinkedIndexU16\">LinkedIndexU16</a>","synthetic":true,"types":["heapless::sorted_linked_list::LinkedIndexU16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.LinkedIndexUsize.html\" title=\"struct heapless::sorted_linked_list::LinkedIndexUsize\">LinkedIndexUsize</a>","synthetic":true,"types":["heapless::sorted_linked_list::LinkedIndexUsize"]},{"text":"impl&lt;'a, T, Idx, K, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.Iter.html\" title=\"struct heapless::sorted_linked_list::Iter\">Iter</a>&lt;'a, T, Idx, K, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Idx: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::sorted_linked_list::Iter"]},{"text":"impl&lt;'a, T, Idx, K, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/sorted_linked_list/struct.FindMut.html\" title=\"struct heapless::sorted_linked_list::FindMut\">FindMut</a>&lt;'a, T, Idx, K, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Idx: Freeze,&nbsp;</span>","synthetic":true,"types":["heapless::sorted_linked_list::FindMut"]},{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; !Freeze for <a class=\"struct\" href=\"heapless/spsc/struct.Queue.html\" title=\"struct heapless::spsc::Queue\">Queue</a>&lt;T, N&gt;","synthetic":true,"types":["heapless::spsc::Queue"]},{"text":"impl&lt;'a, T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/spsc/struct.Iter.html\" title=\"struct heapless::spsc::Iter\">Iter</a>&lt;'a, T, N&gt;","synthetic":true,"types":["heapless::spsc::Iter"]},{"text":"impl&lt;'a, T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/spsc/struct.IterMut.html\" title=\"struct heapless::spsc::IterMut\">IterMut</a>&lt;'a, T, N&gt;","synthetic":true,"types":["heapless::spsc::IterMut"]},{"text":"impl&lt;'a, T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/spsc/struct.Consumer.html\" title=\"struct heapless::spsc::Consumer\">Consumer</a>&lt;'a, T, N&gt;","synthetic":true,"types":["heapless::spsc::Consumer"]},{"text":"impl&lt;'a, T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"heapless/spsc/struct.Producer.html\" title=\"struct heapless::spsc::Producer\">Producer</a>&lt;'a, T, N&gt;","synthetic":true,"types":["heapless::spsc::Producer"]}];
implementors["line_drawing"] = [{"text":"impl&lt;T, I&gt; Freeze for <a class=\"struct\" href=\"line_drawing/steps/struct.Steps.html\" title=\"struct line_drawing::steps::Steps\">Steps</a>&lt;T, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::steps::Steps"]},{"text":"impl Freeze for <a class=\"struct\" href=\"line_drawing/octant/struct.Octant.html\" title=\"struct line_drawing::octant::Octant\">Octant</a>","synthetic":true,"types":["line_drawing::octant::Octant"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.Bresenham.html\" title=\"struct line_drawing::Bresenham\">Bresenham</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::bresenham::Bresenham"]},{"text":"impl&lt;I, O&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.Midpoint.html\" title=\"struct line_drawing::Midpoint\">Midpoint</a>&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::midpoint::Midpoint"]},{"text":"impl&lt;I, O&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.XiaolinWu.html\" title=\"struct line_drawing::XiaolinWu\">XiaolinWu</a>&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::xiaolin_wu::XiaolinWu"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.WalkGrid.html\" title=\"struct line_drawing::WalkGrid\">WalkGrid</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::grid_walking::WalkGrid"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.Supercover.html\" title=\"struct line_drawing::Supercover\">Supercover</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::grid_walking::Supercover"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.Bresenham3d.html\" title=\"struct line_drawing::Bresenham3d\">Bresenham3d</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::bresenham_3d::Bresenham3d"]},{"text":"impl Freeze for <a class=\"enum\" href=\"line_drawing/enum.VoxelOrigin.html\" title=\"enum line_drawing::VoxelOrigin\">VoxelOrigin</a>","synthetic":true,"types":["line_drawing::walk_voxels::VoxelOrigin"]},{"text":"impl&lt;I, O&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.WalkVoxels.html\" title=\"struct line_drawing::WalkVoxels\">WalkVoxels</a>&lt;I, O&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::walk_voxels::WalkVoxels"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"line_drawing/struct.BresenhamCircle.html\" title=\"struct line_drawing::BresenhamCircle\">BresenhamCircle</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["line_drawing::bresenham_circle::BresenhamCircle"]}];
implementors["lock_api"] = [{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.Mutex.html\" title=\"struct lock_api::Mutex\">Mutex</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::mutex::Mutex"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MutexGuard.html\" title=\"struct lock_api::MutexGuard\">MutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MutexGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedMutexGuard.html\" title=\"struct lock_api::MappedMutexGuard\">MappedMutexGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::mutex::MappedMutexGuard"]},{"text":"impl&lt;R, G&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RawReentrantMutex.html\" title=\"struct lock_api::RawReentrantMutex\">RawReentrantMutex</a>&lt;R, G&gt;","synthetic":true,"types":["lock_api::remutex::RawReentrantMutex"]},{"text":"impl&lt;R, G, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutex.html\" title=\"struct lock_api::ReentrantMutex\">ReentrantMutex</a>&lt;R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutex"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.ReentrantMutexGuard.html\" title=\"struct lock_api::ReentrantMutexGuard\">ReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::ReentrantMutexGuard"]},{"text":"impl&lt;'a, R, G, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedReentrantMutexGuard.html\" title=\"struct lock_api::MappedReentrantMutexGuard\">MappedReentrantMutexGuard</a>&lt;'a, R, G, T&gt;","synthetic":true,"types":["lock_api::remutex::MappedReentrantMutexGuard"]},{"text":"impl&lt;R, T&gt; !Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLock.html\" title=\"struct lock_api::RwLock\">RwLock</a>&lt;R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLock"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockReadGuard.html\" title=\"struct lock_api::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockWriteGuard.html\" title=\"struct lock_api::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.RwLockUpgradableReadGuard.html\" title=\"struct lock_api::RwLockUpgradableReadGuard\">RwLockUpgradableReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::RwLockUpgradableReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockReadGuard.html\" title=\"struct lock_api::MappedRwLockReadGuard\">MappedRwLockReadGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockReadGuard"]},{"text":"impl&lt;'a, R, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"lock_api/struct.MappedRwLockWriteGuard.html\" title=\"struct lock_api::MappedRwLockWriteGuard\">MappedRwLockWriteGuard</a>&lt;'a, R, T&gt;","synthetic":true,"types":["lock_api::rwlock::MappedRwLockWriteGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardSend.html\" title=\"struct lock_api::GuardSend\">GuardSend</a>","synthetic":true,"types":["lock_api::GuardSend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"lock_api/struct.GuardNoSend.html\" title=\"struct lock_api::GuardNoSend\">GuardNoSend</a>","synthetic":true,"types":["lock_api::GuardNoSend"]}];
implementors["micromath"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"micromath/struct.F32.html\" title=\"struct micromath::F32\">F32</a>","synthetic":true,"types":["micromath::float::F32"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]}];
implementors["scopeguard"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"scopeguard/enum.Always.html\" title=\"enum scopeguard::Always\">Always</a>","synthetic":true,"types":["scopeguard::Always"]},{"text":"impl&lt;T, F, S&gt; Freeze for <a class=\"struct\" href=\"scopeguard/struct.ScopeGuard.html\" title=\"struct scopeguard::ScopeGuard\">ScopeGuard</a>&lt;T, F, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["scopeguard::ScopeGuard"]}];
implementors["spin"] = [{"text":"impl&lt;R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/barrier/struct.Barrier.html\" title=\"struct spin::barrier::Barrier\">Barrier</a>&lt;R&gt;","synthetic":true,"types":["spin::barrier::Barrier"]},{"text":"impl Freeze for <a class=\"struct\" href=\"spin/barrier/struct.BarrierWaitResult.html\" title=\"struct spin::barrier::BarrierWaitResult\">BarrierWaitResult</a>","synthetic":true,"types":["spin::barrier::BarrierWaitResult"]},{"text":"impl&lt;T, F&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.fn.html\">fn</a>() -&gt; T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/lazy/struct.Lazy.html\" title=\"struct spin::lazy::Lazy\">Lazy</a>&lt;T, F, R&gt;","synthetic":true,"types":["spin::lazy::Lazy"]},{"text":"impl&lt;T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutex.html\" title=\"struct spin::mutex::spin::SpinMutex\">SpinMutex</a>&lt;T, R&gt;","synthetic":true,"types":["spin::mutex::spin::SpinMutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/mutex/spin/struct.SpinMutexGuard.html\" title=\"struct spin::mutex::spin::SpinMutexGuard\">SpinMutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::spin::SpinMutexGuard"]},{"text":"impl&lt;T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/mutex/struct.Mutex.html\" title=\"struct spin::mutex::Mutex\">Mutex</a>&lt;T, R&gt;","synthetic":true,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/mutex/struct.MutexGuard.html\" title=\"struct spin::mutex::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T&nbsp;=&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.64.0/core/primitive.unit.html\">()</a>, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/once/struct.Once.html\" title=\"struct spin::once::Once\">Once</a>&lt;T, R&gt;","synthetic":true,"types":["spin::once::Once"]},{"text":"impl&lt;T, R&nbsp;=&nbsp;<a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>&gt; !Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLock.html\" title=\"struct spin::rwlock::RwLock\">RwLock</a>&lt;T, R&gt;","synthetic":true,"types":["spin::rwlock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockReadGuard.html\" title=\"struct spin::rwlock::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rwlock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, R&gt; Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockWriteGuard.html\" title=\"struct spin::rwlock::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T, R&gt;","synthetic":true,"types":["spin::rwlock::RwLockWriteGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.64.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, R&gt; Freeze for <a class=\"struct\" href=\"spin/rwlock/struct.RwLockUpgradableGuard.html\" title=\"struct spin::rwlock::RwLockUpgradableGuard\">RwLockUpgradableGuard</a>&lt;'a, T, R&gt;","synthetic":true,"types":["spin::rwlock::RwLockUpgradableGuard"]},{"text":"impl Freeze for <a class=\"struct\" href=\"spin/relax/struct.Spin.html\" title=\"struct spin::relax::Spin\">Spin</a>","synthetic":true,"types":["spin::relax::Spin"]},{"text":"impl Freeze for <a class=\"struct\" href=\"spin/relax/struct.Loop.html\" title=\"struct spin::relax::Loop\">Loop</a>","synthetic":true,"types":["spin::relax::Loop"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()